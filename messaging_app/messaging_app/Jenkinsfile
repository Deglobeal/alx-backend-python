pipeline {
    agent any

    environment {
        VENV_DIR = "${WORKSPACE}/venv"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/alx-backend-python.git',
                        credentialsId: 'github'
                    ]]
                ])
            }
        }

        stage('Virtual-env & dependencies') {
            steps {
                sh '''#!/bin/bash
                    python3 -m venv ${VENV_DIR}
                    source ${VENV_DIR}/bin/activate
                    pip install --upgrade pip
                    pip install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run pytest') {
            steps {
                sh '''#!/bin/bash
                    source ${VENV_DIR}/bin/activate
                    pytest messaging_app/tests \
                           --junitxml=messaging_app/test-results.xml \
                           --cov=messaging_app \
                           --cov-report=html:messaging_app/htmlcov
                '''
            }
        }

        stage('Publish reports') {
            steps {
                junit 'messaging_app/test-results.xml'
                publishHTML([
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir:   'messaging_app/htmlcov',
                    reportFiles: 'index.html',
                    reportName:  'Coverage Report'
                ])
            }
        }
    }

    post { always { cleanWs() } }
}